# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build & pack

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-latest, macOS-latest ]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pyinstaller
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build main(Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        pyinstaller ./main.py -p ./features.py
        move dist\main.exe .\

    - name: Build main
      if: ${{ runner.os != 'Windows' }}
      run: |
        pyinstaller ./main.py -p ./features.py
        mv ./dist/main ./

    - name: Cleaning up build(Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        del dist
        del *.spec
        del main.py
        move build build_main

    - name: Cleaning up main build
      if: ${{ runner.os != 'Windows' }}
      run: |
        rm -rf dist/ __pycache__/ build/ *.spec main.py

    - name: Build upload(Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        pyinstaller -F ./upload.py
        move dist\tool.exe .\

    - name: Build upload
      if: ${{ runner.os != 'Windows' }}
      run: |
        pyinstaller -F ./upload.py
        mv ./dist/tool ./

    - name: Cleaning up upload build(Windows)
      if: ${{ runner.os == 'Windows' }}
      run: |
        del dist
        del *.spec
        del upload.py

    - name: Cleaning up upload build
      if: ${{ runner.os != 'Windows' }}
      run: |
        rm -rf dist/ __pycache__/ build/ *.spec upload.py

    - name: Upload all binaries
      uses: actions/upload-artifact@v3
      with:
        name: Ayaki-${{ runner.os }}-x86_64
        path: |
          ./main*
          ./upload*
          ./private_config_sample.yaml
          ./config.yaml
          ./LICENSE
          ./readme.md
          ./tools
